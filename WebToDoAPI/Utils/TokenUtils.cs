using System;
using System.IdentityModel.Tokens.Jwt;
using System.Security.Claims;
using System.Text;
using Microsoft.IdentityModel.Tokens;
using WebToDoAPI.Configuration;
using WebToDoAPI.Data;

namespace WebToDoAPI.Utils
{
    public static class TokenUtils
    {
        public static string GenerateJwtToken(JwtConfig jwtConfig, ApplicationUser user)
        {
            var tokenHandler = new JwtSecurityTokenHandler();

            // We get our secret from the app settings
            var key = Encoding.ASCII.GetBytes(jwtConfig.Secret);

            // we define our token descriptor
            // We need to utilize claims which are properties in our token which gives information about the token
            // which belong to the specific user who it belongs to
            // so it could contain their id, name, email the good part is that these information
            // are generated by our server and identity framework which is valid and trusted
            var tokenDescriptor = new SecurityTokenDescriptor
            {
                Subject = new ClaimsIdentity(new[]
                {
                    new Claim("Id", user.Id),
                    new Claim(JwtRegisteredClaimNames.Sub, user.Email),
                    new Claim(JwtRegisteredClaimNames.Email, user.Email),
                }),
                Expires = DateTime.UtcNow.AddHours(jwtConfig.ExpirationHours),
                SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha512Signature)
            };

            var token = tokenHandler.CreateToken(tokenDescriptor);

            var jwtToken = tokenHandler.WriteToken(token);

            return jwtToken;
        }
    }
}
